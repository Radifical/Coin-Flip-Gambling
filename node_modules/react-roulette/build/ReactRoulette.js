'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _style = require('styled-jsx/style');

var _style2 = _interopRequireDefault(_style);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ReactRoulette = function ReactRoulette(_ref) {
  var items = _ref.items,
      colors = _ref.colors,
      frameColor = _ref.frameColor,
      centerColor = _ref.centerColor,
      image = _ref.image,
      onChange = _ref.onChange,
      clickSpeed = _ref.clickSpeed,
      friction = _ref.friction;

  var elRueda = (0, _react.useRef)(null);
  var elTail = (0, _react.useRef)(null);

  var dmp = 1 - friction;

  var itemDeg = 360 / items.length;

  var pointerThreshold = 0.2;

  var requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;

  window.requestAnimationFrame = requestAnimationFrame;

  var animation = null;
  var position = 0;
  var speed = 0;
  var rolling = false;

  var dragging = false;
  var _mousePosition = null;
  var mousePosition = null;
  var centerPosition = void 0;

  var rollingMath = function rollingMath() {
    if (rolling && speed <= 0.05) {
      rolling = false;
      speed = 0;
      var selected = items.length - Math.floor(position / itemDeg) - 1;
      onChange(items[selected]);
    }
  };

  var draggingMath = function draggingMath() {
    if (dragging && _mousePosition && mousePosition && centerPosition) {
      speed = 0;
      var _angle = Math.atan2(_mousePosition.y - centerPosition.y, _mousePosition.x - centerPosition.x);
      var angle = Math.atan2(mousePosition.y - centerPosition.y, mousePosition.x - centerPosition.x);
      position += (angle - _angle) * (180 / Math.PI) * 1.5;
    }
  };

  var arrowAnimation = function arrowAnimation() {
    var porcentajeEnItem = position % itemDeg / itemDeg;
    var diff = porcentajeEnItem > 1 - pointerThreshold ? Math.abs((1 - pointerThreshold - porcentajeEnItem) / pointerThreshold) : 0;
    elTail.current.style.transform = 'rotate(-' + diff * 25 + 'deg) translateX(-50%)';
  };

  (0, _react.useEffect)(function () {
    var step = function step() {
      if (position > 360) position -= 360;
      if (position < 0) position += 360;
      elRueda.current.style.transform = 'rotate(' + (position + 5) + 'deg)';
      position += speed;
      speed *= dmp;

      rollingMath();
      draggingMath();

      arrowAnimation();

      animation = window.requestAnimationFrame(step);
    };

    animation = window.requestAnimationFrame(step);

    var onPressed = function onPressed(e) {
      e.stopPropagation();
      e.preventDefault();
      if (rolling) return;
      dragging = true;
      var elemRect = elRueda.current.getBoundingClientRect();
      // prettier-ignore
      centerPosition = {
        x: elemRect.left + elemRect.width / 2,
        y: elemRect.top + elemRect.height / 2
      };
      // prettier-ignore-end
      mousePosition = {
        x: ((e.touches || [])[0] || e).clientX,
        y: ((e.touches || [])[0] || e).clientY
      };
    };

    var onMove = function onMove(e) {
      if (!rolling) {
        e.stopPropagation();
        e.preventDefault();
        var actual = {
          x: ((e.touches || [])[0] || e).clientX,
          y: ((e.touches || [])[0] || e).clientY
        };
        _mousePosition = mousePosition || actual;
        mousePosition = actual;
      }
    };

    var onRelease = function onRelease(e) {
      if (!rolling) {
        e.stopPropagation();
        e.preventDefault();

        if (!centerPosition || !mousePosition || !_mousePosition) return;
        if (Math.abs(mousePosition.x - _mousePosition.x) < 16 && Math.abs(mousePosition.y - _mousePosition.y) < 16) {
          return;
        }

        dragging = false;
        rolling = true;

        var _angle = Math.atan2(_mousePosition.y - centerPosition.y, _mousePosition.x - centerPosition.x);
        var angle = Math.atan2(mousePosition.y - centerPosition.y, mousePosition.x - centerPosition.x);
        speed = (angle - _angle) * (180 / Math.PI) * 1.5;
      }
    };

    elRueda.current.addEventListener('mousedown', onPressed);
    elRueda.current.addEventListener('touchstart', onPressed);

    document.addEventListener('mousemove', onMove);
    document.addEventListener('touchmove', onMove);

    document.addEventListener('mouseup', onRelease);
    document.addEventListener('touchend', onRelease);

    return function () {
      window.cancelAnimationFrame(animation);
      elRueda.current.removeEventListener('mousedown', onPressed);
      elRueda.current.removeEventListener('touchstart', onPressed);

      document.removeEventListener('mousemove', onMove);
      document.removeEventListener('touchmove', onMove);

      document.removeEventListener('mouseup', onRelease);
      document.removeEventListener('touchend', onRelease);
    };
  }, [elRueda]);

  var handleOnClick = function handleOnClick() {
    rolling = true;
    // prettier-ignore
    speed = clickSpeed + Math.random() * 10;
    // prettier-ignore-end
  };

  return _react2.default.createElement(
    'div',
    {
      className: _style2.default.dynamic([['698292046', [frameColor, items.map(function (item, i) {
        return colors[i % colors.length] + ' ' + itemDeg * i + 'deg ' + itemDeg * (i + 1) + 'deg';
      }), centerColor, frameColor, frameColor]]]) + ' ' + 'ReactRoulette'
    },
    _react2.default.createElement(
      'div',
      { ref: elRueda, className: _style2.default.dynamic([['698292046', [frameColor, items.map(function (item, i) {
          return colors[i % colors.length] + ' ' + itemDeg * i + 'deg ' + itemDeg * (i + 1) + 'deg';
        }), centerColor, frameColor, frameColor]]]) + ' ' + 'rueda'
      },
      _react2.default.createElement(
        'button',
        { type: 'button', onClick: handleOnClick, className: _style2.default.dynamic([['698292046', [frameColor, items.map(function (item, i) {
            return colors[i % colors.length] + ' ' + itemDeg * i + 'deg ' + itemDeg * (i + 1) + 'deg';
          }), centerColor, frameColor, frameColor]]]) + ' ' + 'center'
        },
        image && _react2.default.createElement('img', { src: image, alt: '', className: _style2.default.dynamic([['698292046', [frameColor, items.map(function (item, i) {
            return colors[i % colors.length] + ' ' + itemDeg * i + 'deg ' + itemDeg * (i + 1) + 'deg';
          }), centerColor, frameColor, frameColor]]])
        })
      )
    ),
    _react2.default.createElement('div', { ref: elTail, className: _style2.default.dynamic([['698292046', [frameColor, items.map(function (item, i) {
        return colors[i % colors.length] + ' ' + itemDeg * i + 'deg ' + itemDeg * (i + 1) + 'deg';
      }), centerColor, frameColor, frameColor]]]) + ' ' + 'tail'
    }),
    _react2.default.createElement(
      _style2.default,
      {
        id: '698292046',
        dynamic: [frameColor, items.map(function (item, i) {
          return colors[i % colors.length] + ' ' + itemDeg * i + 'deg ' + itemDeg * (i + 1) + 'deg';
        }), centerColor, frameColor, frameColor]
      },
      '.__jsx-style-dynamic-selector{position:relative;height:400px;width:400px;}.rueda.__jsx-style-dynamic-selector{z-index:1;width:100%;height:100%;border-radius:100%;border:14px solid ' + frameColor + ';background:conic-gradient( ' + items.map(function (item, i) {
        return colors[i % colors.length] + ' ' + itemDeg * i + 'deg ' + itemDeg * (i + 1) + 'deg';
      }) + ' );}.center.__jsx-style-dynamic-selector{z-index:2;position:absolute;top:50%;left:50%;width:25%;height:25%;border-radius:100%;background:' + centerColor + ';-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);border:2px solid ' + frameColor + ';}.center.__jsx-style-dynamic-selector img.__jsx-style-dynamic-selector{width:100%;height:100%;object-fit:contain;}.tail.__jsx-style-dynamic-selector{z-index:2;width:0;height:0;border-style:solid;border-width:32px 18px 0 18px;border-color:' + frameColor + ' transparent transparent transparent;position:absolute;top:7px;left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);-webkit-transform-origin:top left;-ms-transform-origin:top left;transform-origin:top left;}.tail.__jsx-style-dynamic-selector img.__jsx-style-dynamic-selector{width:100%;height:100%;}@media (max-width:480px){.__jsx-style-dynamic-selector{height:320px;width:320px;}}@media (max-width:320px){.__jsx-style-dynamic-selector{height:220px;width:220px;}}'
    )
  );
};

ReactRoulette.propTypes = {
  items: _propTypes2.default.arrayOf(_propTypes2.default.string).isRequired,
  colors: _propTypes2.default.arrayOf(_propTypes2.default.string).isRequired,
  frameColor: _propTypes2.default.string,
  centerColor: _propTypes2.default.string,
  image: _propTypes2.default.string,
  clickSpeed: _propTypes2.default.number,
  friction: _propTypes2.default.number,
  onChange: _propTypes2.default.func
};

ReactRoulette.defaultProps = {
  frameColor: '#FFF',
  centerColor: '#333',
  image: undefined,
  clickSpeed: 50,
  friction: 0.005,
  onChange: function onChange() {}
};

exports.default = ReactRoulette;